# See gitlab-ci.md and Dockerfile

before_script:
  - pwd && ls -l
  - docker ps --all
  - docker images --all
  - docker network create production || true
  - 'echo Container labels: $DOM.job_id=$CI_JOB_ID, $DOM.commit=$CI_COMMIT_SHA'

variables:
  DOM: "de.suse.gitlab"

stages:
  - build
  - test
  - deploy
  - execute

build:
  stage: build
  except:
    - schedules
  script:
    - >
      docker build --label $DOM.job_stage=$CI_JOB_STAGE
      --label $DOM.job_id=$CI_JOB_ID --label $DOM.commit=$CI_COMMIT_SHA
      -t jdp:$CI_COMMIT_SHA -f install/Dockerfile ./

test:
  stage: test
  except:
    - schedules
  script:
    - >
      docker run --label $DOM.job_stage=$CI_JOB_STAGE
      --label $DOM.job_id=$CI_JOB_ID --label $DOM.commit=$CI_COMMIT_SHA
      -t jdp:$CI_COMMIT_SHA julia ../install/test.jl

docs:
  stage: deploy
  except:
    - schedules
  script:
    - >
      docker run --label $DOM.job_stage=$CI_JOB_STAGE
      --label $DOM.job_id=$CI_JOB_ID --label $DOM.commit=$CI_COMMIT_SHA
      -t jdp:$CI_COMMIT_SHA julia ../docs/build.jl

deploy:
  stage: deploy
  except:
    - schedules
  environment:
    name: production
  when: manual
  only:
    - master
  script:
    - docker tag jdp:$CI_COMMIT_SHA jdp:latest
    - >
      docker build
      --label $DOM.job_stage=$CI_JOB_STAGE --label $DOM.job_id=$CI_JOB_ID
      -t jdp:production -f install/Dockerfile-production
      --build-arg REDIS_AUTH=$REDIS_MASTER_PASS ./

start-redis:
  stage: execute
  except:
    - schedules
  environment:
    name: redis-master
    on_stop: stop-redis
  when: manual
  script:
    - docker stop -t 30 redis || true
    - docker rm redis || true
    - >
      docker run --name redis --network production -d -p 6379:6379
      -v ~/data:/home/jdp/data jdp:production
      /usr/sbin/redis-server conf/redis-master.conf

stop-redis:
  stage: execute
  except:
    - schedules
  environment:
    name: redis-master
    action: stop
  when: manual
  script:
    - docker stop -t 30 redis

report:
  stage: execute
  environment:
    name: production
  only:
    - schedules
  script:
    - >
      docker run --name report --network production -a stdin -t jdp:production
      julia run/all.jl

after_script:
  - ls -l
  - docker ps --all -f label=$DOM.job_id=$CI_JOB_ID -f label=$DOM.commit=$CI_COMMIT_SHA
  - docker images --all -f label=$DOM.job_id=$CI_JOB_ID -f label=$DOM.commit=$CI_COMMIT_SHA
